[Common]
# If this is 'no' then a random port will be sampled from the supplied range.
# This is helpful when running multiple in parellel and it takes time to 
# tear down an old connection. If this is set to True then the
# start port is used. 
UseFixedNetworkPort = no

[Gazebo]
SetupFile = /usr/share/gazebo-9/setup.sh

# This is the directory to the Gazebo aircraft models used in simulation
# By default this is set to run the Iris quadcopter example
AircraftModel = ../models/iris

World = attitude.world

# For setting up network connections to the aircraft and gazebo
Hostname = localhost

NetworkPort = [11345, 12345]

[Units]
# Provide the same rates to your neural network as the FC architecture,
# supported options are rad/s, deg/s
# TODO implement me
Rate = rad/s

# rad/s, deg/s, RPM
# TODO implement me
Rotor = RPM

[Training]
# This must be in the same units as [Units][Rate]
# Match this to the limits of your RC stick rates
TargetAngularVelocitySamplingRange = [-6.2832, 6.2832]

[Aircraft]
MotorCount = 4

# When transferring a trained neural network to a flight controller the neural
# network outputs must map to the correct motor. You can either train the neural
# network to have the outputs matching your target motor layout or keep it the same
# as the digital twin and then do the mapping in software.
#   
# The Iris Quadcopter in Gazebo Mapping:
# Rotor 0 = Front Right 
# Rotor 1 = Back Left 
# Rotor 2 = Front Left 
# Rotor 3 = Back Right
#
# Default Cleanflight/Betaflight motor mapping:
# Rotor 0 = Back Right
# Rotor 1 = Front Right 
# Rotor 2 = Back Left 
# Rotor 3 = Front Left
MotorMapping = [1, 2, 3, 0]

ControlSignalOutputRange = [-1, 1]

NetworkPort = [9005, 10005]
